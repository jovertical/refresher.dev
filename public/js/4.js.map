{"version":3,"sources":["webpack:///./resources/js/pages/Auth/ConfirmPassword.svelte","webpack:///./resources/js/stores/form.js"],"names":["password","handleChange","errors","form","post","route","$form","createForm","values","writable","subscribe","set","update","reset","event","target","name","value"],"mappings":"uqFA4BoB,EAAK,GAACA,S,MACN,EAAM,GAACA,S,SACJ,EAAI,GAACC,gB,gaAP2B,EAAY,K,8CAK/C,EAAK,GAACD,U,cACN,EAAM,GAACA,U,+vBAtBN,EAANE,c,MAAM,G,EAEbC,EAAO,YAAW,CAClBH,SAAU,K,4HAIV,UAAQI,KAAKC,MAAM,oBAAqBC,K,quCCZzC,SAASC,IAAwB,IAAbC,EAAa,uDAAJ,GAAI,EACDC,YAASD,GAApCE,EAD4B,EAC5BA,UAAWC,EADiB,EACjBA,IAAKC,EADY,EACZA,OAExB,MAAO,CACHF,YACAG,MAAO,kBAAMF,EAAIH,IACjBP,aAAc,SAAAa,GACVF,GAAO,SAAAT,GAAI,cACJA,GADI,QAENW,EAAMC,OAAOC,KAAOF,EAAMC,OAAOE","file":"js/4.js?id=40b3438e65bda8d0cb39","sourcesContent":["<script>\n    import { Inertia } from '@inertiajs/inertia';\n    import Button from '~/components/Button';\n    import Auth from '~/components/Layouts/Auth';\n    import TextInput from '~/components/TextInput';\n    import { createForm } from '~/stores/form';\n\n    export let errors = {};\n\n    let form = createForm({\n        password: '',\n    });\n\n    function handleSubmit() {\n        Inertia.post(route('password.confirm'), $form);\n    }\n</script>\n\n<Auth title=\"Confirm password\">\n    <span slot=\"helper\">\n        This is a secure area of the application. Please confirm your password before continuing.\n    </span>\n\n    <form class=\"space-y-6\" on:submit|preventDefault=\"{handleSubmit}\">\n        <TextInput\n            label=\"Password\"\n            name=\"password\"\n            type=\"password\"\n            value=\"{$form.password}\"\n            error=\"{errors.password}\"\n            onChange=\"{form.handleChange}\"\n        />\n\n        <div>\n            <Button>Confirm</Button>\n        </div>\n    </form>\n</Auth>\n","import { writable } from 'svelte/store';\n\nexport function createForm(values = {}) {\n    const { subscribe, set, update } = writable(values);\n\n    return {\n        subscribe,\n        reset: () => set(values),\n        handleChange: event => {\n            update(form => ({\n                ...form,\n                [event.target.name]: event.target.value,\n            }));\n        },\n    };\n}\n"],"sourceRoot":""}